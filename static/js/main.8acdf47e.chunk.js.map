{"version":3,"sources":["comps/Header/Header.js","comps/MemeGenerator.js","App.js","index.js"],"names":["Header","src","alt","MemeGenerator","useState","topText","setTopText","bottomText","setBottomText","allMemes","setAllMemes","meme","setMeme","loading","setLoading","useEffect","fetch","then","res","json","data","memes","className","length","onSubmit","e","preventDefault","randNum","Math","floor","random","randomMemeImg","url","document","getElementById","onload","type","name","placeholder","value","onChange","target","id","onClick","element","querySelector","html2canvas","scrollX","window","scrollY","windowWidth","documentElement","offsetWidth","windowHeight","offsetHeight","logging","letterRendering","useCORS","canvas","link","createElement","download","href","body","appendChild","click","setTimeout","remove","downloadURL","toDataURL","App","ReactDOM","render","StrictMode"],"mappings":"yOAceA,MAZf,WACG,OACG,mCACG,qBACGC,IAAI,iEACJC,IAAI,aAEP,mD,6BCiGMC,MAtGf,WAAyB,MAEQC,mBAAS,IAFjB,mBAEfC,EAFe,KAENC,EAFM,OAGcF,mBAAS,IAHvB,mBAGfG,EAHe,KAGHC,EAHG,OAKUJ,mBAAS,IALnB,mBAKfK,EALe,KAKLC,EALK,OAOEN,mBAAS,IAPX,mBAOfO,EAPe,KAOTC,EAPS,OAUQR,oBAAS,GAVjB,mBAUfS,EAVe,KAUNC,EAVM,KA8DtB,OAlDAC,qBAAU,WACPC,MAAM,qCACFC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GAEJR,EAAYQ,EAAIE,KAAKC,YAE3B,IA4CA,sBAAKC,UAAU,YAAf,UACwB,IAApBb,EAASc,QACP,uBAAMD,UAAU,YAAYE,SA5ChB,SAACC,GACnBA,EAAEC,iBACF,IAAMC,EAAUC,KAAKC,MAAMD,KAAKE,SAAWrB,EAASc,QAC9CQ,EAAgBtB,EAASkB,GAASK,IAExCpB,EAAQmB,GACRE,SAASC,eAAe,QAAQC,OAAS,WACtCrB,GAAW,KAqCR,UACG,uBACGsB,KAAK,OACLC,KAAK,UACLC,YAAY,WACZC,MAAOlC,EACPmC,SAAU,SAACf,GAAD,OAAOnB,EAAWmB,EAAEgB,OAAOF,UAExC,uBACGH,KAAK,OACLC,KAAK,aACLC,YAAY,cACZC,MAAOhC,EACPiC,SAAU,SAACf,GAAD,OAAOjB,EAAciB,EAAEgB,OAAOF,UAG3C,4CAGN,sBAAKjB,UAAU,OAAf,UACG,qBAAKrB,IAAKU,EAAMT,IAAI,GAAGwC,GAAG,UACxB7B,GACC,qCACG,oBAAIS,UAAU,MAAd,SAAqBjB,IACrB,oBAAIiB,UAAU,SAAd,SAAwBf,WAI/BM,GACC,wBAAQ8B,QA9DM,WACpB,IAAIC,EAAUX,SAASY,cAAc,SAErCC,IAAYF,EAAS,CAClBG,SAAUC,OAAOD,QACjBE,SAAUD,OAAOC,QACjBC,YAAajB,SAASkB,gBAAgBC,YACtCC,aAAcpB,SAASkB,gBAAgBG,aACvCC,SAAS,EACTC,gBAAiB,EACjBC,SAAS,IACTxC,MAAK,SAACyC,IAOZ,SAAqB1B,EAAKK,GACvB,IAAIsB,EAAO1B,SAAS2B,cAAc,KAElCD,EAAKE,SAAWxB,EAChBsB,EAAKG,KAAO9B,EACZC,SAAS8B,KAAKC,YAAYL,GAC1BA,EAAKM,QACLC,YAAW,WACRP,EAAKQ,WACL,KAbAC,CAFUV,EAAOW,YAEA,gBAgDmB/C,UAAU,WAA3C,0BCrFGgD,MAVf,WACG,OACG,gCACG,cAAC,EAAD,IACA,cAAC,EAAD,IACA,mBAAGhD,UAAU,oBCHtBiD,IAASC,OACN,cAAC,IAAMC,WAAP,UACG,cAAC,EAAD,MAEHxC,SAASC,eAAe,W","file":"static/js/main.8acdf47e.chunk.js","sourcesContent":["import \"./header.css\";\r\n\r\nfunction Header() {\r\n   return (\r\n      <header>\r\n         <img\r\n            src=\"http://www.pngall.com/wp-content/uploads/2016/05/Trollface.png\"\r\n            alt=\"Problem?\"\r\n         />\r\n         <p>Meme Generator</p>\r\n      </header>\r\n   );\r\n}\r\n\r\nexport default Header;\r\n","import { useState, useEffect } from \"react\";\r\nimport html2canvas from \"html2canvas\";\r\nimport \"./mg.css\";\r\n\r\nfunction MemeGenerator() {\r\n   //Meme text\r\n   const [topText, setTopText] = useState(\"\");\r\n   const [bottomText, setBottomText] = useState(\"\");\r\n\r\n   const [allMemes, setAllMemes] = useState([]); //Meme imgs Array\r\n\r\n   const [meme, setMeme] = useState(\"\"); //Meme\r\n\r\n   //Meme img loading state\r\n   const [loading, setLoading] = useState(true);\r\n\r\n   useEffect(() => {\r\n      fetch(\"https://api.imgflip.com/get_memes\")\r\n         .then((res) => res.json())\r\n         .then((res) => {\r\n            //.console.log(res.data.memes[0]);\r\n            setAllMemes(res.data.memes);\r\n         });\r\n   }, []);\r\n\r\n   const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      const randNum = Math.floor(Math.random() * allMemes.length);\r\n      const randomMemeImg = allMemes[randNum].url;\r\n      //.setting the meme img\r\n      setMeme(randomMemeImg);\r\n      document.getElementById(\"load\").onload = () => {\r\n         setLoading(false);\r\n      };\r\n   };\r\n\r\n   const handleDownload = () => {\r\n      let element = document.querySelector(\".meme\");\r\n\r\n      html2canvas(element, {\r\n         scrollX: -window.scrollX,\r\n         scrollY: -window.scrollY,\r\n         windowWidth: document.documentElement.offsetWidth,\r\n         windowHeight: document.documentElement.offsetHeight,\r\n         logging: true,\r\n         letterRendering: 1,\r\n         useCORS: true,\r\n      }).then((canvas) => {\r\n         var img = canvas.toDataURL();\r\n         //window.open(img);\r\n         downloadURL(img, \"meme.png\");\r\n      });\r\n   };\r\n\r\n   function downloadURL(url, name) {\r\n      let link = document.createElement(\"a\");\r\n\r\n      link.download = name;\r\n      link.href = url;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      setTimeout(() => {\r\n         link.remove();\r\n      }, 500);\r\n   }\r\n\r\n   return (\r\n      <div className=\"container\">\r\n         {allMemes.length !== 0 && (\r\n            <form className=\"meme-form\" onSubmit={handleSubmit}>\r\n               <input\r\n                  type=\"text\"\r\n                  name=\"topText\"\r\n                  placeholder=\"Top Text\"\r\n                  value={topText}\r\n                  onChange={(e) => setTopText(e.target.value)}\r\n               />\r\n               <input\r\n                  type=\"text\"\r\n                  name=\"bottomText\"\r\n                  placeholder=\"Bottom Text\"\r\n                  value={bottomText}\r\n                  onChange={(e) => setBottomText(e.target.value)}\r\n               />\r\n\r\n               <button>Gen</button>\r\n            </form>\r\n         )}\r\n         <div className=\"meme\">\r\n            <img src={meme} alt=\"\" id=\"load\" />\r\n            {!loading && (\r\n               <>\r\n                  <h2 className=\"top\">{topText}</h2>\r\n                  <h2 className=\"bottom\">{bottomText}</h2>\r\n               </>\r\n            )}\r\n         </div>\r\n         {!loading && (\r\n            <button onClick={handleDownload} className=\"download\">\r\n               Download\r\n            </button>\r\n         )}\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default MemeGenerator;\r\n","import Header from \"./comps/Header/Header\";\nimport MemeGenerator from \"./comps/MemeGenerator\";\n\nfunction App() {\n   return (\n      <div>\n         <Header />\n         <MemeGenerator />\n         <p className=\"extra-space\"></p>\n      </div>\n   );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById(\"root\")\n);\n"],"sourceRoot":""}